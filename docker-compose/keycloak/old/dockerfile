# Stage 1: Builder stage using full Debian Bullseye
FROM debian:bullseye AS builder

# Update package lists and install curl and the libnghttp2-14 package

RUN apt-get update && \
     apt-get install -y curl libnghttp2-14 libcurl4 zlib1g librtmp-dev libssh2-1 && \
     rm -rf /var/lib/apt/lists/*

# Verify that required libraries are installed
RUN find / -iname 'libssh2.so*'


# Stage 2: Final image (for example, using the Keycloak image)
FROM quay.io/keycloak/keycloak:latest

USER root

# Set admin credentials
ENV KEYCLOAK_ADMIN=admin
ENV KEYCLOAK_ADMIN_PASSWORD=admin
ENV KC_DB=postgres
ENV KC_DB_URL_HOST=postgresql
ENV KC_DB_URL_DATABASE=postgres
ENV KC_DB_URL_PORT=5432
ENV KC_DB_USERNAME=postgres
ENV KC_DB_PASSWORD=postgres
ENV KC_HOSTNAME=localhost
ENV KC_HOSTNAME_PORT=8080
ENV KC_HOSTNAME_STRICT=false
ENV KC_HOSTNAME_STRICT_HTTPS=false
ENV KC_LOG_LEVEL=info
ENV KC_METRICS_ENABLED=true
ENV KC_HEALTH_ENABLED=true
ENV KEYCLOAK_ADMIN=admin
ENV KEYCLOAK_ADMIN_PASSWORD=admin

# Expose Keycloak port
EXPOSE 8080

# Ensure the target directory exists (adjust based on your imageâ€™s directory structure)
# Create /lib64 if it doesn't exist (some images use /lib instead)
RUN mkdir -p /lib64 /usr/lib64 /usr/lib
# Copy the curl binary from the builder stage
COPY --from=builder /usr/bin/curl /usr/bin/curl

# Copy the required libraries from the builder stage
COPY --from=builder /usr/lib/x86_64-linux-gnu/libcurl.so.4 /lib64/libcurl.so.4
COPY --from=builder /usr/lib/x86_64-linux-gnu/libnghttp2.so.14 /lib64/libnghttp2.so.14
COPY --from=builder /lib/x86_64-linux-gnu/libz.so.1 /lib64/libz.so.1
COPY --from=builder /usr/lib/x86_64-linux-gnu/libidn2.so.0 /lib64/libidn2.so.0
COPY --from=builder /usr/lib/x86_64-linux-gnu/libpsl.so.5 /lib64/libpsl.so.5
COPY --from=builder /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /lib64/libssl.so.1.1
COPY --from=builder /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 /lib64/libcrypto.so.1.1
COPY --from=builder /usr/lib/x86_64-linux-gnu/librtmp.so.1 /lib64/librtmp.so.1
COPY --from=builder /usr/lib/x86_64-linux-gnu/libssh2.so.1 /lib64/libssh2.so.1
COPY --from=builder /usr/lib/x86_64-linux-gnu/libidn2.so.0 /lib64/libidn2.so.0
COPY --from=builder /usr/lib/x86_64-linux-gnu/libpsl.so.5 /lib64/libpsl.so.5
COPY --from=builder /usr/lib/x86_64-linux-gnu/libssl.so.1.1 /lib64/libssl.so.1.1
COPY --from=builder /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 /lib64/libcrypto.so.1.1


# (Optional) Update the dynamic linker cache, if available in your final image
RUN ldconfig || true

ENV LD_LIBRARY_PATH=/lib64:$LD_LIBRARY_PATH

# Run Keycloak in development mode
ENTRYPOINT ["/opt/keycloak/bin/kc.sh", "start-dev"]
