apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      name: keycloak
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.1
          imagePullPolicy: IfNotPresent
          env:
            - name: KEYCLOAK_USER
              value: "kraken"
            - name: KEYCLOAK_PASSWORD
              value: "kraken"
            - name: DB_VENDOR
              value: POSTGRES
            - name: DB_ADDR
              value: postgres
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: "kraken"
            - name: DB_USER
              value: "kraken"
            - name: DB_PASSWORD
              value: "kraken"
            - name: KEYCLOAK_ADMIN
              value: "admin"
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: "admin"
          ports:
            - containerPort: 8180
              name: http
              hostPort: 8180
              protocol: TCP
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  type: NodePort
  selector:
    app: keycloak
  ports:
    - protocol: TCP
      port: 8180
      targetPort: 8180
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "kraken"
            - name: POSTGRES_PASSWORD
              value: "kraken"
            - name: POSTGRES_DB
              value: "kraken"
      restartPolicy: Always
