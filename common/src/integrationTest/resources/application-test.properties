logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.security=INFO
logging.level.com.iriscorporate.pulse.workflow.=INFO
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.url=jdbc:tc:postgresql:latest:///test
spring.datasource.username=test
spring.datasource.password=test
# Data Source
spring.flyway.enabled=true
#----------------------------------------------------
#         Distributed Caching Settings
#----------------------------------------------------
# For a given environment, there must exists *EXACTLY ONE* server taking care of distributed caching.
# Operation mode:
# - embedded -
#    Only for simple deployments, use it only if you can't use redis.
#    The cache server is embedded in this server.
#    Fill multicast properties to notify other servers of cache invalidation or work to perform (rendition, ...).
# - remote -
#    Only for simple deployments, use it only if you can't use redis.
#    The cache server is located on another server.
#    Fill multicast properties to receive cache invalidation or work to perform (rendition, ...).
#    Fill remote url with the internal address of the cache server.
# - redis -
#    Preferred mode for all deployments (even simple ones).
#    Fill redis properties.
irisnext.dcs.mode=embedded
irisnext.dcs.multicast.host=230.1.2.3
irisnext.dcs.multicast.port=888
irisnext.dcs.multicast.delay=10000
irisnext.dcs.remote.url=http\://localhost\:8100/wsui/
irisnext.dcs.redis.server=localhost
irisnext.dcs.redis.port=6379
irisnext.dcs.redis.connectionstring=redis\://localhost\:6379/0
irisnext.dcs.redis.host=${IRISNEXT_DCS_REDIS_HOST\:localhost}
irisnext.dcs.redis.sentinel.enabled=${IRISNEXT_DCS_REDIS_SENTINEL_ENABLED:false}
irisnext.dcs.redis.sentinel.host=${IRISNEXT_DCS_REDIS_SENTINEL_HOST:localhost}
irisnext.dcs.redis.sentinel.port=${IRISNEXT_DCS_REDIS_SENTINEL_PORT:26379}
irisnext.dcs.redis.sentinel.masterid=${IRISNEXT_DCS_REDIS_SENTINEL_MASTERID:master}
# List of Redis Sentinel servers (host, host:port or host:port:masterId) separated by a comma
irisnext.dcs.redis.sentinels=${IRISNEXT_DCS_REDIS_SENTINEL_HOSTS:}
irisnext.dcs.redis.user=${IRISNEXT_DCS_REDIS_USER:}
irisnext.dcs.redis.password=${IRISNEXT_DCS_REDIS_PASSWORD:}
irisnext.dcs.redis.database=${IRISNEXT_DCS_REDIS_DATABASE:0}
irispulse.bps.internal.url=http\://192.168.178.29\:8100/wsui/
# Indicates the number of simultaneous threads that can be used for executing any background processing task.
# Use a value lower than 1 to disable background processing on this server.
# Use 'auto' for automatically adjusting to the number of cpu cores of the system.
irisnext.dcs.threads=1
# Set queue priorities. Queues with higher priority numbers will be fully processed first.
# A negative priority will completely disable the queue.
# Exemple syntax: barcode:1,metadataextraction:2,rendition:-1
irisnext.dcs.priorities=
# BLS caches
irisnext.caches.BLSWorkflowGraph.distributed=true
irisnext.caches.BLSWorkflowGraphShort.distributed=true
irisnext.caches.BLSWorkflowCodeToId.distributed=true
irisnext.caches.BLSWorkflowNode.distributed=true
